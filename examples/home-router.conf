version 1

# ----------------------------------------------------------
# Custom Rules

# This is needed because I run a transparent cache.
# The command is not executed right away, it will be processed
# when the firewall will be activated.
# HINT: This is a normal iptables command. Nothing fancy.
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 ! -d 1.1.1.1 -j REDIRECT --to-port 3128


# ----------------------------------------------------------
# Some definitions, you can define whatever you like...
# ----------------------------------------------------------
# The IP address space on our LAN
tsaousis="1.1.1.1/28"

# The tructed IPs from our office
secure="2.2.2.2/32"


# ----------------------------------------------------------
# IMPORTANT NOTE:
# ----------------------------------------------------------
# This script has a very simple rule:
# INPUT or SOURCE (inface, src, etc) always refers to the CLIENT.
# OUTPUT or DESTINATION (outface, dst, etc) always refers to the SERVER.
#
# So, when you say:
#                 interface ppp0 myname src x.y.z.w/m
# you are matching all CLIENTS comming from ppp0, AND from the x.y.z.w/m network.
#
# Similarly, when you say:
#               router myclients inface eth0 outface ppp0
# you are matching all CLIENTS on eth0 trying to use services from ppp0
# while, with:
#               router myservers inface ppp0 outface eth0
# you are matching all CLIENTS on ppp0 trying to use services from eth0
# ----------------------------------------------------------

# Give the name "internet" to everything comming from ppp+
# making sure they don't have our LAN IP addresses.
interface ppp+ internet src not "${tsaousis}"
	policy drop			# This is also the default
	protection strong 1/sec 1	# Also, limit incoming reqs to 1/sec
	
	# Public Services
	server smtp	accept		# Yes, we run a mailer
	server ident	reject		# Speed-up idents by rejecting them
	
	# Trusted Services
	server ssh	accept src "${secure}"
	
	# This is a workstation
	client all	accept		# This machine can ask anything
					# For correct accounting, put this last
	
# Give the name "home" to our local LAN
interface eth0 home
	policy accept			# Accept everything from/to home
	

# Give the name "router" to all requests comming from eth0 AND our local IP
# address space, and going out to ppp+
router router inface eth0 outface ppp+ src "${tsaousis}"
	policy		drop		# This is also the default
	route all	accept		# Accept all client from eth0 to ppp+
