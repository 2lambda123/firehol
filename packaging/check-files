#!/bin/bash

#
# check-files
#
scriptname=check-files
if ! MYTMP=$(mktemp -d -t $scriptname-XXXXXX)
then
            echo >&2
            echo >&2
            echo >&2 "Cannot create temporary directory."
            echo >&2
            exit 1
fi

cleanup() {
  status=$?
  rm -rf "${MYTMP}"
  exit $status
}

# clean up if we get stopped by Crtl-C or forced logout or normal exit
trap cleanup INT
trap cleanup HUP
trap cleanup 0

if [ "$1" = "--debug" ]
then
  set -x
  shift
fi

if [ $# -lt 1 ]
then
  echo "check-files [--debug] -|filenames"
  echo "e.g."
  echo "  git diff | ./packaging/check-files -"
  echo "or in .git/hooks/pre-commit:"
  echo "  exec git diff --cached | ./packaging/check-files -"
  exit 1
fi

if [ ! -x packaging/check-files ]
then
  echo "Must be run from base directory"
  exit 1
fi

if [ "$1" = "-" ]
then
  from_cache=Y
  f=""
else
  from_cache=
  for f in "$@"
  do
    if [ ! -f "$f" ]
    then
      echo "$f: no such file"
      exit 1
    fi
  done

  git status --porcelain "$@" | grep "^?" | cut -c4- > $MYTMP/missing.lst

  while read missing
  do
     git update-index --add --cacheinfo \
          100644 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 $missing
  done < $MYTMP/missing.lst

  empty_tree=4b825dc642cb6eb9a060e54bf8d69288fbee4904
  git diff $empty_tree -- "$@" > $MYTMP/diff.full
  f=$MYTMP/diff.full

  while read missing
  do
     git update-index --force-remove $missing
  done < $MYTMP/missing.lst
fi

> $MYTMP/diff.lst sed -e "/^+++ b/{p;s:^+++ b/::;w $MYTMP/files.lst" -e "d;}" $f

#cat $MYTMP/diff.lst
#cat $MYTMP/files.lst

dirname="${0%/*}"
if [ "$dir" = "$0" ]; then dir="."; fi
source $dirname/check-files.functions

status=0
while read filename
do
  #echo Checking $filename
  case $filename in
    sbin/Makefile.in)
      :
    ;;
    sbin/*.in)
      check_commands $filename || status=1
    ;;
    ChangeLog)
      need_version_check=Y
      check_changelog || status=1
    ;;
    NEWS)
      need_version_check=Y
    ;;
    *)
      #echo "No checks found for $filename"
      :
    ;;
  esac
done < $MYTMP/files.lst

if [ "$need_version_check" ]
then
  check_version_matches || status=1
fi

exit $status
