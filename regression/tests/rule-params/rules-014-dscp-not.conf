#
# Single rule parameter configuration
#

. ${REGRESSDIR}include/regression.conf

#INTERFACE
interface eth0 myeth0
	ipv4 server tftp accept dscp not class "BE EF"
	ipv4 server ssh accept dscp not class "BE EF"
	ipv4 server eserver accept dscp not class "BE EF"
	ipv4 server hylafax accept dscp not class "BE EF"
if ipv6_capable; then
	ipv6 server tftp accept dscp not class "BE EF"
	ipv6 server ssh accept dscp not class "BE EF"
	ipv6 server eserver accept dscp not class "BE EF"
	ipv6 server hylafax accept dscp not class "BE EF"
fi

interface eth1 myeth1
	ipv4 client tftp accept dscp not class "BE EF"
	ipv4 client ssh accept dscp not class "BE EF"
	ipv4 client eserver accept dscp not class "BE EF"
	ipv4 client hylafax accept dscp not class "BE EF"
if ipv6_capable; then
	ipv6 client tftp accept dscp not class "BE EF"
	ipv6 client ssh accept dscp not class "BE EF"
	ipv6 client eserver accept dscp not class "BE EF"
	ipv6 client hylafax accept dscp not class "BE EF"
fi
#END INTERFACE

#ROUTER
router e2toe3 inface eth2 outface eth3
	ipv4 server tftp accept dscp not class "BE EF"
	ipv4 server ssh accept dscp not class "BE EF"
	ipv4 server eserver accept dscp not class "BE EF"
	ipv4 server hylafax accept dscp not class "BE EF"
if ipv6_capable; then
	ipv6 server tftp accept dscp not class "BE EF"
	ipv6 server ssh accept dscp not class "BE EF"
	ipv6 server eserver accept dscp not class "BE EF"
	ipv6 server hylafax accept dscp not class "BE EF"
fi

router e4toe5 inface eth4 outface eth5
	ipv4 client tftp accept dscp not class "BE EF"
	ipv4 client ssh accept dscp not class "BE EF"
	ipv4 client eserver accept dscp not class "BE EF"
	ipv4 client hylafax accept dscp not class "BE EF"
if ipv6_capable; then
	ipv6 client tftp accept dscp not class "BE EF"
	ipv6 client ssh accept dscp not class "BE EF"
	ipv6 client eserver accept dscp not class "BE EF"
	ipv6 client hylafax accept dscp not class "BE EF"
fi
#END ROUTER
