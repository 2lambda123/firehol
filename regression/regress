#!/bin/bash

if [ ! -x tools/run-suite.sh ]
then
  echo "Executable tools/run-suite.sh script not found"
  exit 1
fi

if [ "$1" != "-ok" -a "$1" != "-fast" ]
then
  echo "Do no run on a production system!"
  echo ""
  echo "This script will wreck your existing firewall, ultimately leaving"
  echo "it empty."
  echo ""
  echo "If you are running remotely your session will get interrupted"
  echo "Ensure you can re-establish control."
  echo ""
  echo "Re-run with '-ok' or '-fast' as a parameter to proceed"
  exit 1
fi

if [ "$1" = "-fast" ]
then
  FIREHOL_FAST_ACTIVATION=1
  export FIREHOL_FAST_ACTIVATION
fi

REGRESSDIR=`pwd`/
export REGRESSDIR

shift

if [ "`id -r -u`" != "0" ]
then
  echo "Must be root"
  notroot="Y"
fi

if [ "$notroot" -o $# -lt 1 ]
then
  echo "Usage: sudo ./regress -ok current|git-version|./path/to/test.conf [...]"
  exit 1
fi

if ! MYTMP="`mktemp -d -t firehol-regress-XXXXXX`"
then
            echo >&2
            echo >&2
            echo >&2 "Cannot create temporary directory."
            echo >&2
            exit 1
fi

ETCSAVE=/etc/firehol.save$$

myexit() {
  rm -rf $MYTMP
  test -d $ETCSAVE && rm -rf /etc/firehol && mv $ETCSAVE /etc/firehol
  exit 0
}

trap myexit INT
trap myexit HUP
trap myexit 0

limit=""
for v in "$@"
do
  run_it=Y
  case $v in
    ./*)
      limit="$limit $v"
      run_it=
    ;;
    current)
     d=current
     (cd .. && cat sbin/firehol.in) > $MYTMP/firehol-$d.in
    ;;
    *)
     if [ -s $v ]; then
        d=$(basename $v)
        f=$MYTMP/firehol-$d.in
        # In case we are comparing against an old sanewall script, we want
        # the default behaviour to be the same
        sed -e '/SANEWALL_.*_ACTIVATION_POLICY=/s/"DROP"/"ACCEPT"/' $v > $f
     else
       d=$v
       f=$MYTMP/firehol-$d.in
       (cd .. && git show $v:firehol.sh > $f 2> /dev/null)
       test -s $f || (cd .. && git show $v:sbin/firehol.in > $f)
     fi
    ;;
  esac

  if [ "$run_it" ]
  then
    test -s $MYTMP/firehol-$d.in || exit 1
    rm -rf output/$d
    chmod +x $MYTMP/firehol-$d.in
    run="$run $d"
  fi
done

test -d $ETCSAVE && mv $ETCSAVE /etc/firehol

started=`date`
RUN_SUITE=OK export RUN_SUITE
for d in $run
do
  ./tools/run-suite.sh $MYTMP/firehol-$d.in output/$d $limit 2>&1 | \
          tee output/$d.log
done
echo " Started: $started"
echo "Finished: $(date)"
echo "    Logs:"
for d in $run
do
  echo "          output/$d.log"
done
