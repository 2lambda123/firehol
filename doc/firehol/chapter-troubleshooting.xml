<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- For license information see chapter-intro.xml -->
<chapter id="troubleshooting"><title>Troubleshooting</title>
  <para>
    The main tool you have for troubleshooting a running firewall is
    the system log, typically <filename>/var/log/syslog</filename>,
    <filename>/var/log/messages</filename> or similar.
  </para>
  <section id="troubleshooting-log"><title>Reading log output</title>
    <para>
      The system log will log any packets dropped
      <emphasis>implicitly</emphasis> by FireHOL. This means any
      packets which do not match any rules in the configuration file.
    </para>
    <para>
      FireHOL always logs packets not matched by any rule, although it
      does not log every single packet, in order to protect you from an
      attack that could use all of your free hard disk space. The rate
      is controlled in the same way as <xref linkend="rule-params-loglimit"/>.
    </para>
    <para>
      In the system log you will find entries that look like: 
      <programlisting>
Dec 21 20:01:07 gateway kernel: IN-internet:IN=ppp0 OUT= MAC= \
  SRC=200.75.88.187 DST=195.97.5.193 LEN=78 TOS=0x00 PREC=0x00 \
  TTL=111 ID=63816 PROTO=UDP SPT=34165 DPT=137 LEN=58 

Dec 21 22:25:39 gateway kernel: OUT-unknown:IN= OUT=ppp0 \
  SRC=195.97.5.193 DST=192.168.23.1 LEN=48 TOS=0x00 PREC=0x00 \
  TTL=64 ID=0 DF PROTO=TCP SPT=139 DPT=1255 WINDOW=2128 \
  RES=0x00 ACK SYN URGP=0 
  
Dec 21 20:01:07 gateway kernel: PASS-unknown:IN=ppp0 OUT=eth0 \
  SRC=200.75.88.187 DST=195.97.5.194 LEN=78 TOS=0x00 PREC=0x00 \
  TTL=110 ID=64840 PROTO=UDP SPT=34132 DPT=137 LEN=58 
      </programlisting>
      Each of such lines represent one packet that did not satisfy the
      requirements of the configuration file rules.
    </para>
    <para>
      FireHOL provides a <emphasis>reason text</emphasis> which indicates
      where a packet was dropped:
      <variablelist>
        <varlistentry><term>IN-<replaceable>name</replaceable></term>
          <listitem>
            <para>
              IN-<replaceable>name</replaceable> refers to packets that
              were dropped at the end of the interface definition
              called <replaceable>name</replaceable>'s input
              (see <xref linkend="def-interface"/>). These
              packets tried to come into this host (it is not routed traffic).
              There is also the special name <emphasis>unknown</emphasis>
              that matches packets which tried to come into this host but
              did not match any of the interfaces given in FireHOL's
              configuration file.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>OUT-<replaceable>name</replaceable></term>
          <listitem>
            <para>
              OUT-<replaceable>name</replaceable> refers to packets that
              were dropped at the end of the interface definition
              called <replaceable>name</replaceable>'s output
              (see <xref linkend="def-interface"/>). These
              are packets the host tried to send (it is not routed traffic).
              There is also the special name <emphasis>unknown</emphasis>
              that matches packets which tried to come into this host but
              did not match any of the interfaces given in FireHOL's
              configuration file.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>PASS-<replaceable>unknown</replaceable></term>
          <listitem>
            <para>
              PASS-<emphasis>unknown</emphasis> refers to packets that
              that were dropped at the end of all router definitions
              (see <xref linkend="def-router"/>). This matches forwarded
              traffic. There is no name here, since all FireHOL routers
              have only one policy RETURN. All packets are processed
              against all routers and then get dropped at the
              end of the firewall.
            </para>
	  </listitem>
        </varlistentry>
      </variablelist>
    </para>
    <para>
      Further information about the dropped packet is logged:
      <variablelist>
        <varlistentry><term>IN=</term>
          <listitem>
            <para>
              The real network interface name the packet came in from.
              It can be empty when the packet was generated locally.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>OUT=</term>
          <listitem>
            <para>
              The real network interface name the packet tried to use to
              go out of this host. It can be empty when the packet was
              received by the firewall host.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>SRC=</term>
          <listitem>
            <para>
              The IP address of the packet's sender.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>DST=</term>
          <listitem>
            <para>
              The IP address of the packet's destination.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>PROTO=</term>
          <listitem>
            <para>
              The protocol this packet is using (TCP, UDP, ICMP, etc).
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>SPT=</term>
          <listitem>
            <para>
               The source port number of this packet.
            </para>
	  </listitem>
        </varlistentry>
        <varlistentry><term>DPT=</term>
          <listitem>
            <para>
              The destination port number of this packet.
            </para>
	  </listitem>
        </varlistentry>
      </variablelist>
    </para>
    <para>
      Generally, you should monitor the system log for such 
      entries and decide if each entry was something useful or 
      not. If it was something useful, you should have added 
      another service somewhere in your FireHOL configuration to 
      match that packet and allow it to reach its destination. If 
      it was not something useful, then FireHOL did the right job 
      and dropped it.
    </para>
    <para>
      Keep in mind that there are certain cases where packets get 
      dropped even though FireHOL has specific rules that should 
      allow them to pass. Such cases are not always errors, and 
      here is why:
    </para>
    <para>
      The iptables connection tracker has a mechanism for 
      matching request packets and reply packets. When an allowed 
      request comes in, the connection tracker keeps it in a list 
      and then waits for a matching reply to come in the opposite 
      direction. This list of active connections is available for 
      you to see at <filename>/proc/net/ip_conntrack</filename>.
      Simply cat this file to see all the current connections your
      system has.
    </para>
    <para>
      The connection tracker will wait for a reply a certain 
      amount of time. This time is, for example, about 20 seconds 
      for UDP traffic. After that time the connection tracker 
      will remove the request from its list. A reply that is send 
      after the connection tracker has removed the request from 
      its list, will be dropped and therefore logged in the 
      system log.
    </para>
    <para>
      This situation may, for example, produce a few log entries 
      in your DNS server for cases where the DNS server could not 
      respond within the time limits set by iptables, but this is 
      not a problem because the DNS client had already timed out 
      in 2 or 3 seconds.
    </para>
    <para>
      Note however that the above are common when the connection 
      tracker is trying to keep a state on a stateless protocol 
      (such as UDP or ICMP). Stateful protocols, such as TCP, 
      always respond immediately to acknowledge the connection 
      and therefore the time needed by the application server to 
      respond does not make the connection tracker to remove the 
      request from its list. 
    </para>
  </section>
<!--
  <section><title>Reading iptables</title>
    <para>
      TODO
    </para>
  </section>
  <section><title>Performance</title>
    <para>content</para>
    <section><title>Generation v.s. running</title>
      <para>content</para>
    </section>
    <section><title>Optimisation</title>
      <para>v.s. auditing</para>
      <para>1 chain per command</para>
      <para>no automated optimisation pass or avoidance of jumps</para>
      <para>manual optimisation with groups</para>
    </section>
    <section><title>Rules are created in order</title>
      <para>put more heavily used interfaces nearer top</para>
      <para>put more heavily used services nearer top of interfaces</para>
    </section>
    <section><title>Startup speed</title>
      <para>Processing phase - no changes in place yet</para>
      <para>Activation phase - limited firewall. Can take a few seconds.</para>
    </section>
  </section>
  -->
</chapter>
