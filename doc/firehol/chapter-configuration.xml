<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- For license information see chapter-intro.xml -->
<chapter id="firehol-configuration"><title>Configuration</title>
  <section id="firehol-config-start"><title>Getting started</title>
    <para>
      Please see the <ulink url="http://firehol.org/tutorial/">online
      tutorials</ulink> for help getting started.
    </para>
<!--
    <para>running the program</para>
    <section><title>Your goals</title>
      <para>references to security - inspecting and auditing</para>
    </section>
    <section><title>Configuration files</title>
      <para>content</para>
    </section>
    <section><title>Creating a firewall</title>
      <para>Website: tutorial</para>
      <para>Website: recipes</para>
      <para>Using the wizard</para>
    </section>
 -->
  </section>
  <section id="firehol-config-language"><title>Language</title>
<!-- TODO
    <para>content</para>
    <section><title>Preamble</title>
      <para>simplicity</para>
      <para>4 main commands</para>
      <para>matched to the domain</para>
    </section>
 -->
    <section id="firehol-config-bash"><title>Use of bash</title>
      <para>
        FireHOL configuration files are normal
        <ulink url="http://www.gnu.org/software/bash/bash.html">BASH</ulink>
        scripts.  As such, you can use all BASH features within FireHOL 
        configuration files, including functions, loops, variables, 
        I/O, etc.
      </para>
      <para>
        BASH is used as the base configuration language for 
        FireHOL since it is the common denominator for a language 
        that all UNIX system administrators and developers should
        know and understand.
      </para>
      <para>
        The fact that FireHOL uses BASH for its configuration, 
        allows development of add-ons and enables FireHOL to use 
        programs to access SQL databases, directory structures, DBM 
        or other files, web front ends or other means for the rules 
        of the firewall.
      </para>
      <para>
        Exactly the same reason allows the build of remote managers 
        for centralised administration of a large number of Linux 
        hosts and routers.
      </para>
      <section><title>What to avoid</title>
        <para>
          The only BASH commands a FireHOL configuration script 
          should never use are <command>trap</command> and
          <command>exit</command>.
        </para>
        <para>
          Traps are used by FireHOL for cleaning up all temporary files, and 
          possibly restoring the previously running firewall in case 
          FireHOL execution breaks, and the exit command will not 
          just exit the configuration file, it will exit FireHOL. 
          FireHOL has disabled these features by default, so that you 
          will not be able to use them, unless you specifically 
          enable them.
        </para>
        <para>
          Since a FireHOL configuration script runs inline with 
          FireHOL, all variables and function names defined within 
          the configuration file overwrite the ones defined by 
          FireHOL so you should avoid some names.
        </para>
        <para>
          Avoid using variables that start with <emphasis>FIREHOL_</emphasis>,
          <emphasis>work_</emphasis>, <emphasis>server_</emphasis>, and
          <emphasis>client_</emphasis> as many such variables are used by
          FireHOL internally.
        </para>
        <para>
          There are also a number of functions names you should avoid,
          but there is no generic pattern at the moment. I suggest you 
          should avoid defining functions with the names of FireHOL 
          commands (interface, router, client, server, etc) and 
          functions starting with <emphasis>rules_</emphasis>.
        </para>
        <note><para>
          You may wish to overwrite a few variables and functions if
          you want to modify FireHOL services. See
          <xref linkend="adding-services"/> for details.
        </para></note>
      </section>
    </section>
<!-- TODO
    <section><title>Interfaces</title>
      <para>content</para>
    </section>
    <section><title>Routers</title>
      <para>content</para>
    </section>
    <section><title>Helpers</title>
      <para>By example / pointer to reference</para>
    </section>
    <section><title>Variables</title>
      <para>content</para>
    </section>
  -->
  </section>
<!-- TODO
  <section><title>Advanced features</title>
    <para>content</para>
    <section><title>Marking packets</title>
      <para>content</para>
    </section>
    <section><title>Defining new actions</title>
      <para>content</para>
    </section>
    <section><title>TOS</title>
      <para>content</para>
    </section>
    <section><title>Adding new complex services</title>
      <para>content</para>
    </section>
  </section>
  <section><title>Limitations</title>
    <para>inability to use service definitions in helpers (mainly NAT)</para>
  </section>
  <section><title>Where to learn more</title>
    <para>bash guides</para>
    <para>reference section</para>
  </section>
  -->
</chapter>
