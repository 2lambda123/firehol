<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- For license information see chapter-intro.xml -->
<refentry id="qos-class-params">

<refmeta>
<refentrytitle>optional class parameters: fireqos-class-params</refentrytitle>
<manvolnum>5</manvolnum>
</refmeta>

<refnamediv>
<refdescriptor>fireqos-class-params</refdescriptor>
<refname>fireqos-class-params</refname>
<refname>fireqos-rate</refname>
<refname>fireqos-commit</refname>
<refname>fireqos-min</refname>
<refname>fireqos-ceil</refname>
<refname>fireqos-max</refname>
<refname>fireqos-minrate</refname>
<refname>fireqos-qdisc</refname>
<refname>fireqos-pfifo</refname>
<refname>fireqos-bfifo</refname>
<refname>fireqos-sfq</refname>
<refname>fireqos-fq_codel</refname>
<refname>fireqos-codel</refname>
<refname>fireqos-none</refname>
<refname>fireqos-class-prio</refname>
<refname>fireqos-linklayer</refname>
<refname>fireqos-ethernet</refname>
<refname>fireqos-atm</refname>
<refname>fireqos-adsl</refname>
<refname>fireqos-mtu</refname>
<refname>fireqos-mpu</refname>
<refname>fireqos-tsize</refname>
<refname>fireqos-overhead</refname>
<refname>fireqos-r2q</refname>
<refname>fireqos-burst</refname>
<refname>fireqos-cburst</refname>
<refname>fireqos-quantum</refname>
<refname>fireqos-class-priority</refname>
<refname>fireqos-balanced</refname>
<refpurpose>optional class parameters</refpurpose>
</refnamediv>

<refsynopsisdiv>
  <cmdsynopsis>
    <command>rate|commit|min</command>
    <arg choice="plain"><replaceable>speed</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>ceil|max</command>
    <arg choice="plain"><replaceable>speed</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>minrate</command>
    <arg choice="plain"><replaceable>speed</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>qdisc</command>
    <arg choice="plain"><replaceable>qdisc-name</replaceable></arg>
    <arg choice="opt">
      <arg choice="plain">options</arg>
      <arg choice="plain">"<replaceable>qdisc-options</replaceable>"</arg>
    </arg>
    <command> or pfifo|bfifo|sfq|fq_codel|codel|none</command>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>prio</command>
    <arg choice="plain">
      <group choice="req">
        <arg choice="plain">0..7</arg>
        <arg choice="plain">keep</arg>
        <arg choice="plain">last</arg>
      </group>
    </arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>linklayer</command>
    <arg choice="plain"><replaceable>linklayer-name</replaceable></arg>
    <command> or ethernet|atm</command>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>adsl</command>
    <arg choice="plain">
      <group choice="plain">
        <arg choice="plain">local</arg>
        <arg choice="plain">remote</arg>
      </group>
    </arg>
    <arg choice="plain"><replaceable>encapsulation</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>mtu</command>
    <arg choice="plain"><replaceable>bytes</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>mpu</command>
    <arg choice="plain"><replaceable>bytes</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>tsize</command>
    <arg choice="plain"><replaceable>size</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>overhead</command>
    <arg choice="plain"><replaceable>bytes</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>r2q</command>
    <arg choice="plain"><replaceable>factor</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>burst</command>
    <arg choice="plain"><replaceable>bytes</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>cburst</command>
    <arg choice="plain"><replaceable>bytes</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>quantum</command>
    <arg choice="plain"><replaceable>bytes</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
    <command>priority|balanced</command>
  </cmdsynopsis>
</refsynopsisdiv>

<refsect1><title>Description</title>
  <para>
     All of the options apply to <command>interface</command> and
     <command>class</command> statements.
  </para>
  <para>
     Units for speeds are defined in <xref linkend="fireqos.conf"/>.
  </para>

  <variablelist>
    <varlistentry><term><option>rate</option> <replaceable>speed</replaceable></term>
                  <term><option>commit</option> <replaceable>speed</replaceable></term>
                  <term><option>min</option> <replaceable>speed</replaceable></term>
      <listitem>
        <para>
           When a committed rate is provided to a class, it means that the
           bandwidth will be given to the class when it needs it.
           If the class does not need the bandwidth, it will be available
           for any other class to use.
        </para>
        <simplelist type="vert">
          <member>
              For interfaces, a rate must be defined.
          </member>
          <member>
             For classes the rate defaults to 1/100 of the interface capacity.
          </member>
        </simplelist>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>ceil</option> <replaceable>speed</replaceable></term>
                  <term><option>max</option> <replaceable>speed</replaceable></term>
      <listitem>
        <para>
          Defines the maximum speed a class can use. Even there is
          available bandwidth, a class will not exceed its ceil speed.
        </para>
        <simplelist type="vert">
          <member>
            For interfaces, the default is the <option>rate</option> speed
            of the interface.
          </member>
          <member>
            For classes, the defaults is the <option>ceil</option> of the
            their interfaces.
          </member>
        </simplelist>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>minrate</option> <replaceable>speed</replaceable></term>
      <listitem>
        <para>
          Defines the default committed speed for all classes not
          specifically given a rate in the config file. It forces a
          recalculation of tc r2q.
        </para>
        <para>
          When minrate is not given, FireQOS assigns a default value
          of 1/100 of the interface <option>rate</option>.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>qdisc</option> <replaceable>qdisc-name</replaceable></term>
                  <term><option>pfifo</option></term>
                  <term><option>bfifo</option></term>
                  <term><option>sfq</option></term>
                  <term><option>fq_codel</option></term>
                  <term><option>codel</option></term>
                  <term><option>none</option></term>
      <listitem>
        <para>
          The qdisc defines the method to distribute class bandwidth to
          its sockets. It is applied within the class itself and is useful
          in cases where a class gets saturated. For information about
          these, see <ulink url="http://www.tldp.org/HOWTO/Traffic-Control-HOWTO/classless-qdiscs.html"/>
        </para>
        <para>
          A qdisc is only useful when applied to a class. It can be
          specified at the interface level in order to set the default
          for all of the included classes.
        </para>
        <para>
          To pass options to a qdisc, you can specify them
          through an environment variable or explicitly on each class.
        </para>
        <para>
          Set the variable <envar>FIREQOS_DEFAULT_QDISC_OPTIONS_<replaceable>qdiscname</replaceable></envar>
            in the config file. For example, for sfq:
        </para>
<programlisting>
FIREQOS_DEFAULT_QDISC_OPTIONS_sfq="perturb 10 quantum 2000".
</programlisting>
        <para>
          Using this variable each sfq will get these options by default.
          You can still override this by specifying explicit
          <option>options</option> for individual qdiscs.
        </para>
        <para>
          Add <option>options</option>
          "<replaceable>qdisc options here</replaceable>". So to specify,
          for example, sfq options you would write:
        </para>
<programlisting>
class <replaceable>name</replaceable> sfq options "perturb 10 quantum 2000"
</programlisting>
        <para>
          The <option>options</option> keyword must appear just after the
          qdisc name.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>prio</option> 0..7|keep|last</term>
      <listitem>
        <para>
          HTB supports 8 priorities, from 0 to 7. Any number less than
          0 will give priority 0. Any number above 7 will give priority 7.
        </para>
        <para>
          By default, FireQOS gives the first class priority 0, and
          increases this number by 1 for each class it encounters in
          the config file. If there are more than 8 classes, all
          classes after the 8th will get priority 7. In
          <option>balanced</option> mode (see
          <xref linkend="qos-class-option-priority"/>), all classes
          will get priority 4 by default.
        </para>
        <para>
          FireQOS restarts priorities for each interface and class group.
        </para>
        <para>
          The class priority defines how the spare bandwidth is spread
          among the classes. Classes with higher priorities (lower
          <option>prio</option>) will get all spare bandwidth. Classes
          with the same priority will get a percentage of the spare
          bandwidth, proportional to their committed rates.
        </para>
        <para>
          The keywords <option>keep</option> and <option>last</option> will
          make a class use the priority of the class just above / before it.
          So to make two consecutive classes have the same prio, just
          add <option>prio keep</option> to the second one.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>linklayer</option> <replaceable>linklayer-name</replaceable></term>
                  <term><option>ethernet</option></term>
                  <term><option>atm</option></term>
      <listitem>
        <para>
          The <option>linklayer</option> can only be given on interfaces.
          It is used by the kernel to calculate the overheads in the packets.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>adsl</option> local|remote <replaceable>encapsulation</replaceable></term>
      <listitem>
        <para>
          <option>adsl</option> is a special <option>linklayer</option>
          that automatically calculates ATM overheads for the link.
        </para>
        <para>
          <option>local</option> is used when the ADSL modem is directly
           attached to your computer (for example a PCI card, or a USB modem).
        </para>
        <para>
          <option>remote</option> is used when you have an ADSL router
          attached to an ethernet port of your computer.
        </para>
        <para>
          When one is using PPPoE pass-through, so there is an ethernet
          ADSL modem (not router) and PPP is running on the Linux host,
          the option to choose is <option>local</option>.
          <note>
            <para>
              This special case has not yet been demonstrated for sure.
              Experiment a bit and if you find out, let us know to update
              this page. In practice, this parameter lets the kernel know
              that the packets it sees, have already an ethernet header
              on them.
            </para>
          </note>
        </para>
        <para>
          <option>encapsulation</option> can be one of (all the labels on the
          same line are aliases):
          <simplelist type="vert">
            <member>
 IPoA-VC/Mux or ipoa-vcmux or ipoa-vc or ipoa-mux
            </member>
            <member>
 IPoA-LLC/SNAP or ipoa-llcsnap or ipoa-llc or ipoa-snap
            </member>
            <member>
 Bridged-VC/Mux or bridged-vcmux or bridged-vc or bridged-mux
            </member>
            <member>
 Bridged-LLC/SNAP or bridged-llcsnap or bridged-llc or bridged-snap
            </member>
            <member>
 PPPoA-VC/Mux or pppoa-vcmux or pppoa-vc or pppoa-mux
            </member>
            <member>
 PPPoA-LLC/SNAP or pppoa-llcsnap or pppoa-llc or pppoa-snap
            </member>
            <member>
 PPPoE-VC/Mux or pppoe-vcmux or pppoe-vc or pppoe-mux
            </member>
            <member>
 PPPoE-LLC/SNAP or pppoe-llcsnap or pppoe-llc or pppoe-snap
            </member>
          </simplelist>
        </para>
        <para>
          If your adsl router can give you the mtu, it would be nice to
          add an <option>mtu</option> parameter too. For detailed info, see:
          <ulink url="http://ace-host.stuart.id.au/russell/files/tc/tc-atm/"/>.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>mtu</option> <replaceable>bytes</replaceable></term>
      <listitem>
        <para>
          Defines the MTU of the interface.
        </para>
        <para>
          FireQOS will query the interface to find its MTU. You can
          overwrite this behaviour by giving this parameter to a class
          or interface.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>mpu</option> <replaceable>bytes</replaceable></term>
      <listitem>
        <para>
          Defines the MPU of the interface.
        </para>
        <para>
          FireQOS does not set a default value. You can set your own using
          this parameter.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>tsize</option> <replaceable>size</replaceable></term>
      <listitem>
        <para>
          FireQOS does not set a default value. You can set your own using
          this parameter.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>overhead</option> <replaceable>bytes</replaceable></term>
      <listitem>
        <para>
          FireQOS automatically calculates the <option>overhead</option>
          for ADSL. For all other technologies, you can specify the
          overhead in the config file.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>r2q</option> <replaceable>factor</replaceable></term>
      <listitem>
        <para>
          FireQOS calculates the proper r2q, so that you can control
          speeds in steps of 1/100th of the interface speed (if that
          is possible).
        </para>
        <note>
          <para>
            The HTB manual states that this parameter is ignored when a
            quantum have been set. By default, FireQOS sets quantum to
            interface MTU, so <option>r2q</option> is probably is
            ignored by the kernel.
          </para>
        </note>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>burst</option> <replaceable>bytes</replaceable></term>
      <listitem>
        <para>
          <option>burst</option> is the number of bytes that will be sent at
          once, at ceiling speed, when a class is allowed to send traffic. It
          is like a 'traffic unit'. A class is allowed to send at least
          <option>burst</option> bytes before trying to serve any other class.
        </para>
        <para>
          <option>burst</option> should never be lower that the interface
          mtu and class groups and interfaces should never have a
          smaller <option>burst</option> value than their children. If you
          do specify a higher <option>burst</option> for a child class,
          its parent may get stuck sometimes (the child will drain the parent).
        </para>
        <para>
          By default, FireQOS lets the kernel decide this parameter, which
          calculates the lowest possible value (the minimum value depends
          on the rate of the interface and the clock speed of the CPU).
        </para>
        <para>
          <option>burst</option> is inherited from interfaces to classes
          and from group classes to their subclasses. FireQOS will not
          allow you to set a <option>burst</option> at a subclass,
          higher than its parent. Setting a <option>burst</option> of
          a subclass higher than its parent will drain the parent class,
          which may be stuck for up to a minute when this happens. For
          this check to work, FireQOS uses just its configuration (it
          does not query the kernel to check how the value specified in
          the config file for a subclass relates to the actual value of
          its parent).
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>cburst</option> <replaceable>bytes</replaceable></term>
      <listitem>
        <para>
          <option>cburst</option> is like <option>burst</option>, but at
           hardware speed (not just ceiling speed).
        </para>
        <para>
           By default, FireQOS lets the kernel decide this parameter.
        </para>
        <para>
           <option>cburst</option> is inherited from interfaces to
           classes and from group classes to their subclasses. FireQOS
           will not allow you to set a <option>cburst</option> at a
           subclass, higher to its parent. Setting a <option>cburst</option>
           of a subclass higher than its parent, will drain the parent
           class, which may be stuck for up to a minute when this happens.
           For this check to work, FireQOS uses just its configuration
           (it does not query the kernel to check how the value specified
           in the config file for a subclass relates to the actual
           value of its parent).
        </para>
      </listitem>
    </varlistentry>

    <varlistentry><term><option>quantum</option> <replaceable>bytes</replaceable></term>
      <listitem>
        <para>
          <option>quantum</option> is the amount of bytes a class is
          allowed to send at once, when it is borrowing spare bandwidth
          from other classes.
        </para>
        <para>
          By default, FireQOS sets <option>quantum</option> to the
          interface mtu.
        </para>
        <para>
          <option>quantum</option> is inherited from interfaces to
          classes and from group classes to their subclasses.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry id="qos-class-option-priority">
                  <term><option>priority</option></term>
                  <term><option>balanced</option></term>
      <listitem>
        <para>
          These parameters set the priority mode of the child classes.
        </para>
        <para>
          <option>priority</option> is the default mode, where FireQOS
          assigns an incremental priority to each class. In this mode,
          the first class takes <option>prio 0</option>, the second
          <option>prio 1</option>, etc. When a class has a higher prio
          than the others (higher = smaller number), this high priority
          class will get all the spare bandwidth available, when it
          needs it. Spare bandwidth will be allocate to lower priority
          classes only when the higher priority ones do not need it.
        </para>
        <para>
          <option>balanced</option> mode gives <option>prio 4</option>
          to all child classes. When multiple classes have the
          same <option>prio</option>, the spare bandwidth available
          is spread among them, proportionally to their committed rate.
          The value 4 can be overwritten by
          setting <envar>FIREQOS_BALANCED_PRIO</envar> at the top of
          the config file to the <option>prio</option> you want the
          balanced mode to assign for all classes.
        </para>
        <para>
          The priority mode can be set in interfaces and class groups.
          The effect is the same. The classes that are defined as child
          classes, will get by default the calculated class
          <option>prio</option> based on the priority mode given.
        </para>
        <para>
          These options affect only the default <option>prio</option> that
          will be assigned by FireQOS. The default is used only if you
          don't explicitly use a <option>prio</option> parameter on a class.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
</refsect1>

<refsect1><title>See Also</title>
  <simplelist type="vert">
    <member><xref linkend="fireqos"/></member>
    <member><xref linkend="fireqos.conf"/></member>
    <member><xref linkend="qos-interface"/></member>
    <member><xref linkend="qos-class"/></member>
  </simplelist>
</refsect1>

</refentry>
